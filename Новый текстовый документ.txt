3 || 4 = 3 Если левое тру, то проверять дальше нет смысла. Вернет ее
0 || 4 = 4 Первое фолс, идет дальше и возвращает тру

0 || 0 = 0 Вернет последнее фолс

!true = false
!false = true

! && || - По приоритености
<= >= приоритетнее логических операторов, а между собой равны

Игнорирует пробелы, переводы строк JS
JS - прощает если не напишем ;
Интерпретатор сам поставит за нас. И в этом иногда минус
Лучше самим ставить ;
JS - регистрозависимый язык. Большие и маленькие буквы различаются

Перменная (var) не должна начинаться с цифры

x += 5;
x = x + 5;
var a = 1, b, c = "Hello";

var a = b = c = 10;
Сквозное присваивание. Каждая равна 10

2 + "2" = "22" При конкатенации строка приоритетнее
5 + true = 6 True приводится к единице, a False к 0
2 + 2 + '2' = '42' Соблюдается последовательность
2 + '2' + 2 = '222'
'5' * 10 = 50 Так умножение сугубо арифметическое в отличие от +
'x' * 10 = Nan - Not a number. Не может получить число. Это не ошибка

Умножение строки на единицу приведет ее к числу: '5' * 1 = 5 или +"5" = 5

5 + '' = '5' Приведет к строке

false, undefined, null, 0, '', Nan  = При приведении к булиевому типу дают False, все отсальное true
Switch - case Происходит жесткое сравнение (===), а в php мягкое сравнение (==)
